@page
@model Dirarys_Final_Project.Pages.Characters.IndexModel

@{
    ViewData["Title"] = "Character Info";
}

<body class="bg-secondary bg-dark text-white">
<h1>Character Info</h1>
<!-- Link to take user to create character page. -->
<h5><u><a class="text-white" asp-page="Create">Create New Character</a></u></h5>
<br>
<div>
    <!-- Form used to create search bar. -->
    <form method="post" class="form-inline mb-2">
        <div class="form-group">
            <label class="control-label mr-1">Search by Name :</label>
            <br>
            <input asp-for="searchString" class="form-control mr-2" />
        </div>
        <br>
        <div class="form-group">
            <input type="submit" value="Find" class="btn btn-primary" />
        </div>
        <div class="form-group">
            <a class="btn btn-primary page-link ml-2" asp-page="./Index">Reset</a>
        </div>
    </form>
</div>
<div class="border border-white">
    <table class="table">
        <thead>
            <tr>
                <!-- Makes all table heading clickable to initiate sorting. -->
                <th class="text-center">
                    @{
                        var firstSort = "name_asc";
                        if (Model.CurrentSort == "name_asc")
                        {
                            firstSort = "name_desc";
                        }
                    }
                    <u><a class="text-white" asp-page="./Index" asp-route-CurrentSort="@firstSort" asp-route-PageNum="@(Model.PageNum)">@Html.DisplayNameFor(model => model.Character[0].Name)</a></u>
                </th>
                <th class="text-center">
                    @{
                        var secondSort = "age_asc";
                        if (Model.CurrentSort == "age_asc")
                        {
                            secondSort = "age_desc";
                        }
                    }
                    <u><a class="text-white" asp-page="./Index" asp-route-CurrentSort="@secondSort" asp-route-PageNum="@(Model.PageNum)">@Html.DisplayNameFor(model => model.Character[0].Age)</a></u>
                </th>
                <th class="text-center">
                    @{
                        var thirdSort = "height_asc";
                        if (Model.CurrentSort == "height_asc")
                        {
                            thirdSort = "height_desc";
                        }
                    }
                    <u><a class="text-white" asp-page="./Index" asp-route-CurrentSort="@thirdSort" asp-route-PageNum="@(Model.PageNum)">@Html.DisplayNameFor(model => model.Character[0].Height)</a></u>
                </th>
                <th class="text-center">
                    @{
                        var fourthSort = "weight_asc";
                        if (Model.CurrentSort == "weight_asc")
                        {
                            fourthSort = "weight_desc";
                        }
                    }
                    <u><a class="text-white" asp-page="./Index" asp-route-CurrentSort="@fourthSort" asp-route-PageNum="@(Model.PageNum)">@Html.DisplayNameFor(model => model.Character[0].Weight)</a></u>
                </th>
                <th class="text-center">
                    @{
                        var fifthSort = "race_asc";
                        if (Model.CurrentSort == "race_asc")
                        {
                            fifthSort = "race_desc";
                        }
                    }
                    <u><a class="text-white" asp-page="./Index" asp-route-CurrentSort="@fifthSort" asp-route-PageNum="@(Model.PageNum)">@Html.DisplayNameFor(model => model.Character[0].Race)</a></u>
                </th>
                <th class="text-center">
                    @{
                        var sixthSort = "spec_asc";
                        if (Model.CurrentSort == "spec_asc")
                        {
                            sixthSort = "spec_desc";
                        }
                    }
                    <u><a class="text-white" asp-page="./Index" asp-route-CurrentSort="@sixthSort" asp-route-PageNum="@(Model.PageNum)">@Html.DisplayNameFor(model => model.Character[0].Specialization)</a></u>
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
        <!-- Display character information for each character in list with edit, details, delete for each. -->   
        @foreach (var item in Model.Character) {
            <tr>
                <td class="text-center text-white">
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td class="text-center text-white">
                    @Html.DisplayFor(modelItem => item.Age)
                </td>
                <td class="text-center text-white">
                    @Html.DisplayFor(modelItem => item.Height)
                </td>
                <td class="text-center text-white">
                    @Html.DisplayFor(modelItem => item.Weight)
                </td>
                <td class="text-center text-white">
                    @Html.DisplayFor(modelItem => item.Race)
                </td>
                <td class="text-center text-white">
                    @Html.DisplayFor(modelItem => item.Specialization)
                </td>
                <td class="text-center">
                    <u><a class="text-white" asp-page="./Edit" asp-route-id="@item.CharacterID">Edit</a></u> |
                    <u><a class="text-white" asp-page="./Details" asp-route-id="@item.CharacterID">Details</a></u> |
                    <u><a class="text-white" asp-page="./Delete" asp-route-id="@item.CharacterID">Delete</a></u>
                </td>
            </tr>
        }
        </tbody>
    </table>
</div>
<br>
<!-- Used to disable previous and next buttons when on first or last page of list. -->
@{
    var prevDisabled= "";
    if (Model.PageNum <= 1)
    {
        prevDisabled = "disabled";
    }
}
@{
    var nextDisabled= "";
    if (Model.Character.Count() < 10)
    {
        nextDisabled = "disabled";
    }
}
<!-- Previous and Next paging buttons. -->
<nav aria-label="Page navigation example">
    <ul class="pagination">
        <li class="page-item @prevDisabled"><a class="page-link" asp-page="./Index" asp-route-PageNum="@(Model.PageNum - 1)" asp-route-CurrentSort="@(Model.CurrentSort)">Previous</a></li>
        <li class="page-item @nextDisabled"><a class="page-link" asp-page="./Index" asp-route-PageNum="@(Model.PageNum + 1)" asp-route-CurrentSort="@(Model.CurrentSort)">Next</a></li>
    </ul>
</nav>
</body>
